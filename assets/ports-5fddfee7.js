import{s as Z,F as i,a as L,m as N}from"./main-ef562b84.js";import{a as ee,c as U,G as $,M as G,$ as e,t as W,T as te}from"./DarkTheme-2fd54461.js";const k={analyticsChanges:{}};k.initialize=function(y){const m=this,M=[{name:"MSP",groups:["configuration","msp"],maxPorts:2},{name:"GPS",groups:["sensors"],maxPorts:1},{name:"TELEMETRY_FRSKY",groups:["telemetry"],sharableWith:["msp"],notSharableWith:["peripherals"],maxPorts:1},{name:"TELEMETRY_HOTT",groups:["telemetry"],sharableWith:["msp"],notSharableWith:["peripherals"],maxPorts:1},{name:"TELEMETRY_SMARTPORT",groups:["telemetry"],maxPorts:1},{name:"RX_SERIAL",groups:["rx"],maxPorts:1},{name:"BLACKBOX",groups:["peripherals"],sharableWith:["msp"],notSharableWith:["telemetry"],maxPorts:1},{name:"TELEMETRY_LTM",groups:["telemetry"],sharableWith:["msp"],notSharableWith:["peripherals"],maxPorts:1},{name:"TELEMETRY_MAVLINK",groups:["telemetry"],sharableWith:["msp"],notSharableWith:["peripherals"],maxPorts:1},{name:"IRC_TRAMP",groups:["peripherals"],maxPorts:1},{name:"ESC_SENSOR",groups:["sensors"],maxPorts:1},{name:"TBS_SMARTAUDIO",groups:["peripherals"],maxPorts:1},{name:"TELEMETRY_IBUS",groups:["telemetry"],maxPorts:1},{name:"RUNCAM_DEVICE_CONTROL",groups:["peripherals"],maxPorts:1},{name:"LIDAR_TF",groups:["peripherals"],maxPorts:1},{name:"FRSKY_OSD",groups:["peripherals"],maxPorts:1}];Z.gte(i.CONFIG.apiVersion,ee)&&M.push({name:"VTX_MSP",groups:["peripherals"],sharableWith:["msp"],maxPorts:1});for(const c of M)c.displayName=U.getMessage(`portsFunction_${c.name}`);let Y=["9600","19200","38400","57600","115200","230400","250000","500000","1000000"];const D=["AUTO","9600","19200","38400","57600","115200"],K=["AUTO","9600","19200","38400","57600","115200"],w=["AUTO","19200","38400","57600","115200","230400","250000","1500000","2000000","2470000"],V=["configuration","peripherals","sensors","telemetry","rx"];$.active_tab="ports",H();function H(){G.promise(L.MSP_VTX_CONFIG).then(function(){N.loadSerialConfig(c)});function c(){e("#content").load("./tabs/ports.html",j)}}function z(){m.analyticsChanges={},e(".tab-ports").addClass("supported");const c=20,A={0:"UART1",1:"UART2",2:"UART3",3:"UART4",4:"UART5",5:"UART6",6:"UART7",7:"UART8",8:"UART9",9:"UART10",20:"USB VCP",30:"SOFTSERIAL1",31:"SOFTSERIAL2",40:"LPUART1"};let _=e("select.gps_baudrate");for(const t of D)_.append(`<option value="${t}">${t}</option>`);let b=e("select.msp_baudrate");for(const t of Y)b.append(`<option value="${t}">${t}</option>`);let h=e("select.telemetry_baudrate");for(const t of K)h.append(`<option value="${t}">${t}</option>`);let o=e("select.blackbox_baudrate");for(const t of w)o.append(`<option value="${t}">${t}</option>`);let C,I;const O=e(".tab-ports .ports"),n=e("#tab-ports-templates .portIdentifier"),P=e("#tab-ports-templates .portConfiguration");for(let t=0;t<i.SERIAL_CONFIG.ports.length;t++){const p=n.clone(),s=P.clone(),a=i.SERIAL_CONFIG.ports[t];s.data("serialPort",a),b=s.find("select.msp_baudrate"),b.val(a.msp_baudrate),h=s.find("select.telemetry_baudrate"),h.val(a.telemetry_baudrate);let r;a.functions.indexOf("GPS")>=0?r=a.gps_baudrate:r="AUTO",_=s.find("select.gps_baudrate"),_.val(r);let S;a.functions.indexOf("BLACKBOX")>=0?S=a.blackbox_baudrate:S="AUTO",o=s.find("select.blackbox_baudrate"),o.val(S),p.find(".identifier").text(A[a.identifier]),s.find(".identifier").text(A[a.identifier]),s.data("index",t),s.data("port",a);for(let g=0;g<V.length;g++){const u=V[g],R=e(s).find(`.functionsCell-${u}`);for(let F=0;F<M.length;F++){const B=M[F],l=B.name;if(B.groups.indexOf(u)===-1)continue;let f;if(u!=="telemetry"&&u!=="sensors"&&u!=="peripherals"){const d=`functionCheckbox-${t}-${g}-${F}`;let v='<span class="function"><input type="checkbox" class="togglemedium" id=';if(v+=`"${d}" value="${l}" /><label for="${d}"></label></span>`,R.prepend(v),a.functions.indexOf(l)>=0&&R.find(`#${d}`).prop("checked",!0),a.identifier===c&&l==="MSP"){const x=R.find(`#${d}`);x.prop("checked",!0),x.prop("disabled",!0)}}else{const d=`function-${u}`,v=`select[name=${d}]`;f=R.find(v);const x=U.getMessage("portsTelemetryDisabled");if(f.length===0&&(R.prepend(`<span class="function"><select name="${d}" /></span>`),f=R.find(v),f.append(`<option value="">${x}</option>`)),f.append(`<option value="${l}">${B.displayName}</option>`),f.sortSelect(x),a.functions.indexOf(l)>=0&&(f.val(l),u==="peripherals"&&(l==="TBS_SMARTAUDIO"||l==="IRC_TRAMP")&&(C=l),u==="peripherals"&&l.includes("MSP")&&(I=l)),u==="telemetry"){const J=l;f.on("change",function(){const Q=e(this).val();let X;Q!==J&&(X=e(this).find("option:selected").text()),m.analyticsChanges.Telemetry=X})}}}}O.find("tbody").append(p),O.find("tbody").append(s)}const T=i.VTX_CONFIG.vtx_table_available&&(i.VTX_CONFIG.vtx_table_bands===0||i.VTX_CONFIG.vtx_table_channels===0||i.VTX_CONFIG.vtx_table_powerlevels===0),E=e('select[name="function-peripherals"]');E.on("change",function(){let t,p;E.each(function(s,a){const r=e(a).val();(r==="TBS_SMARTAUDIO"||r==="IRC_TRAMP")&&(t=r),r.includes("MSP")&&(p=r,e(".tab-ports .portConfiguration").each(function(S,g){e(g).find("select[name=function-peripherals]").val().includes("MSP")&&s===S&&e(`#functionCheckbox-${S}-0-0`).prop("checked",!0).trigger("change")}))}),C!==t&&(m.analyticsChanges.VtxControl=t,C=t),I!==p&&(m.analyticsChanges.MspControl=p,I=p),e(".vtxTableNotSet").toggle(t&&T)}),E.trigger("change")}function j(){U.localizePage(),z(),e("a.save").on("click",q),$.interval_add("status_pull",function(){G.send_message(L.MSP_STATUS)},250,!0),$.content_ready(y)}function q(){W.sendSaveAndChangeEvents(W.EVENT_CATEGORIES.FLIGHT_CONTROLLER,m.analyticsChanges,"ports"),m.analyticsChanges={},i.SERIAL_CONFIG.ports=[],e(".tab-ports .portConfiguration").each(function(O,n){const P=e(n).data("serialPort"),T=e(n).find("input:checkbox:checked").map(function(){return this.value}).get(),E=e(n).find("select[name=function-telemetry]").val();E&&T.push(E);const t=e(n).find("select[name=function-sensors]").val();t&&T.push(t);const p=e(n).find("select[name=function-peripherals]").val();p&&T.push(p);let s=e(n).find(".gps_baudrate").val();s==="AUTO"&&(s="57600");let a=e(n).find(".blackbox_baudrate").val();a==="AUTO"&&(a="115200");const r={functions:T,msp_baudrate:e(n).find(".msp_baudrate").val(),telemetry_baudrate:e(n).find(".telemetry_baudrate").val(),gps_baudrate:s,blackbox_baudrate:a,identifier:P.identifier};i.SERIAL_CONFIG.ports.push(r)});let c=!1,A=!1,_=!1,b=!1,h=!1;for(const O of i.SERIAL_CONFIG.ports){const n=O.functions;n.includes("RX_SERIAL")&&(c=!0),n.some(P=>P.startsWith("TELEMETRY"))&&(A=!0),n.includes("BLACKBOX")&&(_=!0),n.includes("ESC_SENSOR")&&(b=!0),n.includes("GPS")&&(h=!0)}const o=i.FEATURE_CONFIG.features;c?o.enable("RX_SERIAL"):o.disable("RX_SERIAL"),A&&o.enable("TELEMETRY"),_?o.enable("BLACKBOX"):o.disable("BLACKBOX"),b?o.enable("ESC_SENSOR"):o.disable("ESC_SENSOR"),h?o.enable("GPS"):o.disable("GPS"),N.sendSerialConfig(C);function C(){G.send_message(L.MSP_SET_FEATURE_CONFIG,N.crunch(L.MSP_SET_FEATURE_CONFIG),!1,I)}function I(){N.writeConfiguration(!0)}}};k.cleanup=function(y){y&&y()};te.ports=k;export{k as ports};
